<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./desc_files/filelist.xml">
<link rel=Edit-Time-Data href="./desc_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>S_matrix</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>lcg</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Mike</o:LastAuthor>
  <o:Revision>202</o:Revision>
  <o:TotalTime>317</o:TotalTime>
  <o:Created>2002-02-18T17:17:00Z</o:Created>
  <o:LastSaved>2003-04-12T18:47:00Z</o:LastSaved>
  <o:Pages>6</o:Pages>
  <o:Words>1099</o:Words>
  <o:Characters>6265</o:Characters>
  <o:Company> </o:Company>
  <o:Lines>52</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>7693</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:10.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:Arial;
	mso-font-kerning:0pt;
	font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
p
	{margin-right:0pt;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<meta name="Microsoft Border" content="b, default">
</head>

<body bgcolor=white lang=EN-US link=blue vlink=blue style='tab-interval:36.0pt'>

<div class=Section1>

<p style='margin-bottom:12.0pt'><b><span style='font-size:24.0pt;mso-bidi-font-size:
12.0pt'>S_matrix<o:p></o:p></span></b></p>


<div class=MsoNormal align=center style='margin-bottom:12.0pt;text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<p style='margin-top:12.0pt'><strong><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>S_matrix</span></strong><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Arial'> is a 4x4 matrix class used for 3D
transformations. In most cases it is assumed that last column of matrix is (0,
0, 0, 1), and most computations rely on this assumption. If some function is
using entire matrix, it is noted.<br>
S_matrix is declared as:</span></p>

<pre><span style='font-family:"Lucida Console"'>struct S_matrix{<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console"'><span style="mso-spacerun: yes">   </span>float <strong><i><span
style='font-weight:normal'>m</span></i></strong>[4][4];<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console"'>};</span><em><b><span style='font-family:
"Lucida Console";mso-bidi-font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></pre>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name=Accessing></a><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'>Constructors:<em><span style='font-style:normal'><o:p></o:p></span></em></span></b></p>

<table border=1 cellspacing=0 cellpadding=0 style='margin-left:44.6pt;
 border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#ctr_quat"><b>explicit
  S_matrix(const S_quat &amp;q);</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Accessing
data:<em><span style='font-style:normal'><o:p></o:p></span></em></span></b></p>

<table border=1 cellspacing=0 cellpadding=0 style='margin-left:44.6pt;
 border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_ref"><b>float
  &amp;operator ()(int </b><b><i>y</i></b><b>, int </b><b><i>x</i></b><b>);</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_ref2"><b>const float
  &amp;operator ()(int </b><b><i>y</i></b><b>, int </b><b><i>x</i></b><b>)
  const;</b></a></span></strong><b><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_vecref"><b>S_vector
  &amp;operator ()(int </b><b><i>row</i></b><b>);</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_vecref2"><b>const S_vector
  &amp;operator ()(int </b><b><i>r</i></b><b>) const;</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name=Operators></a><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'>Operators:<o:p></o:p></span></b></p>

<table border=1 cellspacing=0 cellpadding=0 style='margin-left:44.6pt;
 border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_soucin"><b>S_matrix
  operator *(const S_matrix &amp;</b><b><i>m</i></b><b>) const;</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_soucin2"><b>S_matrix
  &amp;operator *=(const S_matrix &amp;</b><b><i>m</i></b><b>);</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_mult_quat"><b>S_matrix
  &amp;operator *=(const S_quat &amp;q);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_mult_rot"><b>S_matrix
  operator %(const S_matrix &amp;m) const;</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_mult_rot_assign"><b>S_matrix
  &amp;operator %=(const S_matrix &amp;m);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_inv"><b>S_matrix operator
  ~() const;</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Matrix
functions:<o:p></o:p></span></b></p>

<table border=1 cellspacing=0 cellpadding=0 style='margin-left:44.6pt;
 border-collapse:collapse;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_Mult4X4"><b>S_matrix
  Mult4X4(const S_matrix &amp;</b><b><i>m</i></b><b>) const;</b></a></span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='height:3.5pt'>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:3.5pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_GetScale"><b>S_vector
  GetScale() const;</b></a></span></strong><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_Identity"><b>void
  Identity();</b></a></span></strong><b><i><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></i></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_Zero"><b>void Zero();</b></a></span></strong><b><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></i></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_Inverse"><b>bool Invert();</b></a></span></strong><b><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></i></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_SetDir"><b>void
  SetDir(const S_vector &amp;</b><b><i>dir</i></b><b>, float </b><b><i>roll</i></b><b>);</b></a></span></strong><b><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></i></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_SetDir2"><b>void
  SetDir(const S_vector &amp;</b><b><i>dir</i></b><b>, const S_vector &amp;</b><b><i>up</i></b><b>);</b></a></span></strong><b><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></i></b></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_SetRot"><b>void
  SetRot(const S_quat &amp;rot);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_transpose"><b>void
  Transpose();</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_RotX"><b>void
  RotationX(float angle);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_RotY"><b>void
  RotationY(float angle);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#f_RotZ"><b>void
  RotationZ(float angle);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_make"><b>S_matrix
  &amp;Make(const S_matrix &amp;m1, const S_matrix &amp;m2);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_make_4x4"><b>S_matrix
  &amp;Make4X4(const S_matrix &amp;m1, const S_matrix &amp;m2);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=531 valign=top style='width:398.2pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'><a href="#op_make_4x4_t"><b>S_matrix
  &amp;Make4X4Transposed(const S_matrix &amp;m1, const S_matrix &amp;m2);</b></a><o:p></o:p></span></strong></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Description:<o:p></o:p></span></b></p>

<table border=1 cellspacing=0 cellpadding=0 bgcolor="#dddddd" style='background:
 #DDDDDD;border-collapse:collapse;border:none;mso-border-alt:solid windowtext .25pt;
 mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  padding:0pt 5.4pt 0pt 5.4pt;height:36.0pt'>
  <p class=MsoNormal><strong><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'>explicit <a name="ctr_quat"></a>S_matrix(<o:p></o:p></span></strong></p>
  <p class=MsoNormal><strong><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'><span style='mso-tab-count:1'>            </span>const
  S_quat &amp;</span></strong><strong><i><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>q</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal><strong><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal><strong><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <pre><strong><span style='mso-bidi-font-size:12.0pt;font-family:Arial;
  mso-fareast-font-family:"Times New Roman";font-weight:normal'>Initialize matrix by rotation represented in quaternion.<o:p></o:p></span></strong></pre><pre><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></pre>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>q<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <pre style='margin-left:22.5pt'><span style='font-family:Arial'>Quaternion, by which matrix 3x3 rotation part is initialized. Before this, the matrix is set to identity matrix.</span><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>float &amp;operator()(<a
  name="op_ref"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>y</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>x</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>const float
  &amp;operator()(<a name="op_ref2"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>y</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>x</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>) const;<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Get reference to y-th row and
  x-th member of matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>y<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Index of
  row, valid values are 0 to 3.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>x<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Index of
  column, valid values are 0 to 3.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The returned
  value is a reference to member on the desired position.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_vector &amp;operator()(<a
  name="op_vecref"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>row</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>const S_vector <a
  name="op_vecref2"></a>&amp;operator()(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>int </span></strong><strong><i><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>row</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>) const;<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Get reference to row of <strong>S_matrix</strong>,
  which is returned as reference to <b>S_vector</b>.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>row<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Index of
  row, valid values are 0 to 3.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The
  returned value is a reference to row on the desired position, interpreted as
  S_vector.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void Identity();<a
  name="f_Identity"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Create identity matrix. This
  method sets all members of matrix to zero, except of diagonal, which is set
  to ones.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void Zero();<a
  name="f_Zero"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Set all data members to value
  zero.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>bool Invert();<a
  name="f_Inverse"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Compute inverse matrix. <o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The
  return value is true, if the call succeeds, or false if inversed matrix
  cannot be computed.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void SetDir(<a
  name="f_SetDir"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_vector &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>dir</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>float </span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>roll</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'> =
  0.0f</span></strong><strong><span style='font-size:10.0pt;mso-bidi-font-size:
  12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Set up rotation part of matrix
  to given direction and optionally rotate around Z axis by <strong><i><span
  style='font-weight:normal'>roll</span></i></strong> angle. This method first
  sets the matrix to Identity, and then sets up the rotation to the 3x3 part of
  matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>dir<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Direction
  vector, at which to orientate the Z axis of the matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>roll<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Rotation
  about Z axis, which is applied after the rotation.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void SetDir(<a
  name="f_SetDir2"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_vector &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>dir</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>, <o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_vector &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>up</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Set up rotation part of matrix
  to given direction vector and up vector. This method first sets the matrix to
  Identity, and then sets up the rotation to the 3x3 part of matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>dir<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Direction
  vector, at which to orientate the Z axis of the matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>up<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Direction
  vector, at which to orientate the Y axis of the matrix.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void SetRot(<br>
  <span style='mso-tab-count:1'>            </span><a name="f_SetRot"></a>const
  S_quat &amp;</span></strong><strong><i><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>rot</span></i></strong><strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><br>
  );<o:p></o:p></span></strong></p>
  <pre style='tab-stops:36.0pt'><strong><span style='font-family:Arial;
  font-weight:normal'>Set 3x3 rotation part of matrix to be rotation represented by given quaternion. </span></strong><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'>This method doesn't change any other part of the matrix.<o:p></o:p></span></strong></pre>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>rot<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <pre style='margin-left:22.5pt;tab-stops:36.0pt'><span style='font-family:
  Arial'>Quaternion to take rotation from.</span><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman"'><o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void I3DAPI Transpose();<a
  name="f_transpose"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <pre><strong><span style='mso-bidi-font-size:12.0pt;font-family:Arial;
  mso-fareast-font-family:"Times New Roman";font-weight:normal'>Transpose matrix.<o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix operator *<a
  name="op_soucin"></a>(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>) const;<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix &amp;operator
  *=(<a name="op_soucin2"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Multiply matrices. This is an
  optimized version assuming that last column of both matrixes is [0, 0, 0, 1],
  which results in multiplying 3x4 parts of both matrices.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>m<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Matrix,
  by which this matrix will be multiplied.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The
  returned value is a resulting matrix (first version), or a reference to
  resulting (this) matrix (second version).<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix &amp;operator
  *=(<a name="op_mult_quat"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_quat &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>q</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <pre><strong><span style='mso-bidi-font-size:12.0pt;font-family:Arial;
  mso-fareast-font-family:"Times New Roman";font-weight:normal'>Multiply matrix by quaternion. This means that matrix is multiplied by rotation represented by quaternion.<o:p></o:p></span></strong></pre><pre><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></pre>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>q<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Quaternion,
  by which this matrix will be multiplied.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <pre style='margin-left:22.5pt'><span style='font-family:Arial'>The returned value is a resulting matrix (first version), or a reference to resulting (this) matrix </span><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix <a
  name="op_mult_rot"></a>operator %(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>) const;<o:p></o:p></span></strong></p>
  <h1 style='tab-stops:36.0pt'><strong>S_matrix<a name="op_mult_rot_assign"></a>
  &amp;operator %=(<o:p></o:p></strong></h1>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <pre><strong><span style='mso-bidi-font-size:12.0pt;font-family:Arial;
  mso-fareast-font-family:"Times New Roman";font-weight:normal'>Multiply matrix by another matrix, using only its 3x3 rotation part.<o:p></o:p></span></strong></pre><pre><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></pre>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>m<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Matrix,
  by which this matrix will be multiplied.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <pre style='margin-left:22.5pt'><span style='font-family:Arial'>The returned value is a resulting matrix (first version), or a reference to resulting (this) matrix (second version).</span><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix operator ~()
  const;<a name="op_inv"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <pre><strong><span style='mso-bidi-font-size:12.0pt;font-family:Arial;
  mso-fareast-font-family:"Times New Roman";font-weight:normal'>This operator is used for computing inverted matrix.<o:p></o:p></span></strong></pre><pre><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></pre>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <pre style='margin-left:22.5pt'><span style='font-family:Arial'>The returned value is a resulting inverted matrix.</span><strong><span
  style='mso-bidi-font-size:12.0pt;font-family:Arial;mso-fareast-font-family:
  "Times New Roman";font-weight:normal'><o:p></o:p></span></strong></pre></td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix Mult4X4(<a
  name="f_Mult4X4"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const struct S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m</span></i></strong><strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>) const;<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Multiply matrices. This is a
  version multiplying 4x4 parts of both matrices.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>m<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Matrix,
  by which this matrix will be multiplied.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The
  returned value is a resulting matrix.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix &amp;Make(<a
  name="op_make"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m1</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m2</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix &amp;Make4X4(<a
  name="op_make_4x4"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m1</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m2</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_matrix
  &amp;Make4X4Transposed(<a name="op_make_4x4_t"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m1</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>,<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>const S_matrix &amp;</span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>m2</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoBodyText style='tab-stops:36.0pt'><strong><span style='font-weight:
  normal'>Make this matrix from two input matrices. This means concatenation of
  matrices into resulting (this) matrix.</span></strong><br>
  <strong><span style='font-weight:normal'>The first function works on 3x4
  parts of matrices, assuming last column is [0, 0, 0, 1].</span></strong><br>
  <strong><span style='font-weight:normal'>Second function works on entire 4x4
  parts of matrices.</span></strong><br>
  <strong><span style='font-weight:normal'>The last function also works on
  entire 4x4 parts of matrices, but stores the results in such a way, that the
  resulting matrix is transposed.<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>m1, m2<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Input
  matrices, which will be concanetated.<o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>The
  returned value is reference to concatenated matrix (this).<strong><span
  style='font-weight:normal'><o:p></o:p></span></strong></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>S_vector GetScale()
  const;<a name="f_GetScale"></a><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Compute scale of matrix.<o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Return value:</span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Scale of
  matrix, which is a vector composing of magnitudes of first three rows treated
  as 3D vectors.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width=590 valign=top style='width:442.8pt;border:solid windowtext .25pt;
  border-top:none;mso-border-top-alt:solid windowtext .25pt;padding:0pt 5.4pt 0pt 5.4pt;
  height:36.0pt'>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>v<a name="f_RotX"></a>oid
  RotationX(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>float </span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>angle</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void <a name="f_RotY"></a>RotationY(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>float </span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>angle</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>void <a name="f_RotZ"></a>RotationZ(<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><span style='mso-tab-count:
  1'>            </span>float </span></strong><strong><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;
  font-weight:normal'>angle</span></i></strong><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>);<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'>These
  functions create rotation matrices around particular X, Y or Z axis.<o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><strong><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><b><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'>Parameters:<o:p></o:p></span></b></p>
  <p class=MsoNormal style='tab-stops:36.0pt'><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><i><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>angle<o:p></o:p></span></i></p>
  <p class=MsoNormal style='margin-left:7.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
  <p class=MsoNormal style='margin-left:22.5pt;tab-stops:36.0pt'><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Angle of
  rotation.<strong><span style='font-weight:normal'><o:p></o:p></span></strong></span></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><strong><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Remarks:</span></strong><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>User can
access data members of <strong>S_matrix</strong> directly through
two-dimensional array <b>m</b>, which is a member of the class, or using overloaded
operators.<b><o:p></o:p></b></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>See Also:<o:p></o:p></span></b></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><a
href="..\S_quat\desc.htm">S_quat</a>, <a href="..\s_matrix2\desc.htm">S_matrix2</a>
, <u><span style='color:blue'><a href="..\s_vector\desc.htm"><span
style='color:windowtext;text-decoration:none;text-underline:none'><span
style="mso-spacerun: yes"> </span><span style='mso-field-code:"HYPERLINK \0022\.\.\\\\s_vector\\\\desc\.htm\0022"'><u><span
style='color:blue'>S_vector</span></u></span></span></a></span></u> , <a
href="..\s_plane\desc.htm">S_plane</a><o:p></o:p></span></b></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>
