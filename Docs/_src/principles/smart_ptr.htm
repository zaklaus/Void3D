<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./smart_ptr_files/filelist.xml">
<link rel=Edit-Time-Data href="./smart_ptr_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Reference counting</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:LastAuthor>Mike</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>19</o:TotalTime>
  <o:Created>2002-03-05T10:59:00Z</o:Created>
  <o:LastSaved>2002-04-17T12:06:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>272</o:Words>
  <o:Characters>1554</o:Characters>
  <o:Company>Lonely Cat Games</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1908</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h4
	{margin-right:0pt;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0pt;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0pt;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 65.95pt 72.0pt 65.95pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:36.0pt'>

<div class=Section1>

<p><strong><span style='font-size:24.0pt;mso-bidi-font-size:13.5pt'>Smart
pointer</span></strong><span style='font-size:11.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>


<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial;font-style:normal'>Insanity3D uses smart pointer template class for
declaring of variables holding pointer to reference-counted interface.<o:p></o:p></span></em></p>

<p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial;font-style:normal'>Declared in: </span></b></em><em><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:
normal'>SmartPtr.h<o:p></o:p></span></em></p>

<p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
"Lucida Console";mso-bidi-font-family:Arial;font-style:normal'>template&lt;class
T&gt; class C_smart_ptr{</span></em><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:"Lucida Console";mso-bidi-font-family:Arial'><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">   </span>T
*ptr;</span></em><br>
<em><span style='font-style:normal'>public:</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">  
</span>C_smart_ptr();</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">   </span>C_smart_ptr(T
*tp);</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">  
</span>C_smart_ptr(const C_smart_ptr&lt;T&gt; &amp;sp);</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">  
</span>~C_smart_ptr();</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">  
</span>C_smart_ptr &amp;operator =(T *tp);</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">  
</span>C_smart_ptr &amp;operator =(const C_smart_ptr &amp;sp);</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">   </span>operator
T *() const;</span></em><br>
<em><span style='font-style:normal'><span style="mso-spacerun: yes">   </span>T
&amp;operator *() const;<br>
<span style="mso-spacerun: yes">   </span>T *operator -&gt;() const;<br>
<span style="mso-spacerun: yes">   </span>bool operator !() const;<br>
<span style="mso-spacerun: yes">   </span>bool operator ==(T *tp) const;<br>
<span style="mso-spacerun: yes">   </span>bool operator !=(T *tp) const;<br>
};</span></em></span><em><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>

<p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial;font-style:normal'>Constructors:<o:p></o:p></span></b></em></p>

<table border=1 cellspacing=0 cellpadding=0 bgcolor="#dddddd" style='margin-left:
 30.2pt;background:#DDDDDD;border-collapse:collapse;border:none;mso-border-alt:
 solid silver .5pt;mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>C_smart_ptr();<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Default constructor, initializing the pointer to
  NULL.<o:p></o:p></span></em></p>
  </td>
 </tr>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  border-top:none;mso-border-top-alt:solid silver .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>C_smart_ptr(T *tp);<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Constructor initializing the pointer from provided
  C++ pointer, and increasing reference pointer of interface by calling <b>AddRef</b>.<o:p></o:p></span></em></p>
  </td>
 </tr>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  border-top:none;mso-border-top-alt:solid silver .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>C_smart_ptr(const C_smart_ptr&lt;T&gt; &amp;sp);<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Constructor initializing the pointer using other
  smart pointer, and increasing reference pointer of interface by calling <b>AddRef</b>.<o:p></o:p></span></em></p>
  </td>
 </tr>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  border-top:none;mso-border-top-alt:solid silver .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>~C_smart_ptr();<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Destructor. If pointer is not NULL, it is releasing
  reference counter of pointed interface by calling <b>Release</b> method.<o:p></o:p></span></em></p>
  </td>
 </tr>
</table>

<p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial;font-style:normal'>Operators:<o:p></o:p></span></b></em></p>

<table border=1 cellspacing=0 cellpadding=0 bgcolor="#dddddd" style='margin-left:
 30.2pt;background:#DDDDDD;border-collapse:collapse;border:none;mso-border-alt:
 solid silver .5pt;mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>C_smart_ptr &amp;operator =(T *tp);<br>
  C_smart_ptr &amp;operator =(const C_smart_ptr &amp;sp);<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Assignment operator, releasing current pointer (if
  not NULL), assigning new pointer from provided value and increasing its reference
  (if not NULL).<o:p></o:p></span></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>The returned value is reference to this class.<o:p></o:p></span></em></p>
  </td>
 </tr>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  border-top:none;mso-border-top-alt:solid silver .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>operator T *() const;<br>
  T &amp;operator *() const;<br>
  T *operator -&gt;() const;<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Operators for conversion of this class to pointer,
  reference and de-reference to T.<o:p></o:p></span></em></p>
  </td>
 </tr>
 <tr>
  <td width=435 valign=top style='width:326.2pt;border:solid silver .5pt;
  border-top:none;mso-border-top-alt:solid silver .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>bool operator !() const;<br>
  bool operator ==(T *tp) const;<br>
  bool operator !=(T *tp) const;<o:p></o:p></span></b></em></p>
  <p><em><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Operators for comparing of the pointer to NULL,
  equality or inequality to other pointer.<o:p></o:p></span></em></p>
  </td>
 </tr>
</table>

<p><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Remarks:<o:p></o:p></span></b></p>

<p><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Smart-pointers
are designed to work with reference-counted interface. See <b>Reference
counting</b> for details.<o:p></o:p></span></p>

<p><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>See
Also<o:p></o:p></span></b></p>

<p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial;font-style:normal'><a href="ref_count.htm">Reference counting</a></span></b></em><strong><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-weight:
normal'><o:p></o:p></span></strong></p>

<p><span style='display:none;mso-hide:all'>&nbsp;<o:p></o:p></span></p>

<h4 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></h4>

</div>

</body>

</html>
