<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./I3D_triface_files/filelist.xml">
<link rel=Edit-Time-Data href="./I3D_triface_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>I3D_triface</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Mike</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Mike</o:LastAuthor>
  <o:Revision>13</o:Revision>
  <o:TotalTime>18</o:TotalTime>
  <o:Created>2002-04-11T10:05:00Z</o:Created>
  <o:LastSaved>2002-07-16T08:31:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>272</o:Words>
  <o:Characters>1554</o:Characters>
  <o:Company> </o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1908</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0pt;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<meta name="Microsoft Border" content="b, default">
</head>

<body bgcolor=white lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<p><strong><span style='font-size:24.0pt;mso-bidi-font-size:13.5pt'>I3D_triface</span></strong></p>


<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>


<p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
Arial'>I3D_triface</span></strong><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'> is a simple class with exactly 3 members of type
word, which describe indices to 3 vertices of triangle face.<o:p></o:p></span></p>

<p><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>It
is defined as:<o:p></o:p></span></p>

<pre><span style='font-family:"Lucida Console";mso-bidi-font-family:Arial'>struct I3D_triface{<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'><span style="mso-spacerun: yes">&nbsp;&nbsp; </span><b>word </b><strong><i><span
style='font-weight:normal'>vi</span></i></strong>[3];<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'>public:<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'><span style="mso-spacerun: yes">&nbsp;&nbsp; </span>I3D_triface(){}<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'><span style="mso-spacerun: yes">&nbsp;&nbsp; </span>I3D_triface(<b>word </b><i>i0</i>, <b>word </b><i>i1</i>, <b>word </b><i>i2</i>);<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'><span style="mso-spacerun: yes">&nbsp;&nbsp; </span><b>word </b>&amp;operator[](<b>int </b><i>i</i>);<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'><span style="mso-spacerun: yes">&nbsp;&nbsp; </span>const <b>word </b>&amp;operator[](<b>int </b><i>i</i>) const;<o:p></o:p></span></pre><pre><span
style='font-family:"Lucida Console";mso-bidi-font-family:Arial'>};<o:p></o:p></span></pre>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><em><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:
normal'>Members:<o:p></o:p></span></em></p>

<p style='margin-left:10.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><em><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>vi<o:p></o:p></span></em></p>

<p style='margin-left:30.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><em><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:
normal'>Array of three face vertex indices.<o:p></o:p></span></em></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><em><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:
normal'>Methods:<o:p></o:p></span></em></p>

<table border=1 cellspacing=0 cellpadding=0 style='border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-padding-alt:0pt 5.4pt 0pt 5.4pt'>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Constructors:</span></b></em><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;background:#A6A6A6;
  padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>I3D_triface();</span></strong><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Default
  constructor.<i><o:p></o:p></i></span></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><span style='font-size:10.0pt;
  mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>I3D_triface(word i0, word i1, word i2);</span></strong><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Constructor
  initializing the face with 3 indices.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Member access:</span></b></em><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>word &amp;operator[](int i);</span></strong><b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><br>
  <strong>const word &amp;operator[](int i) const;</strong></span></b><span
  style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>
  <p><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'>Array
  member operator accessing index array by index. The index value may be in
  range from 0 to 2.<strong><o:p></o:p></strong></span></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Validity:<o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>void Invalidate();<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Invalidate face &#8211; set first index to
  0xffff.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>bool IsValid() const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Check if face is valid &#8211; first vertex
  is not 0xffff.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><em><b><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:
  Arial;font-style:normal'>Other:<o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>bool ContainsIndex(word v) const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Check if face contains specified index.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>bool FaceContainsIndices(word v0, word v1) const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Check if face contains specified two
  indices.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>void ReplaceIndex(word v_orig, word v_new);<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Replace all specified indices <i>v_orig</i>
  contained in the face by new index <i>v_new</i>.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>int FindSharedEdge(const I3D_triface &amp;fc) const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Find edge shared between this face and
  provided face. If one is found, the returned value is index to 1<sup>st</sup>
  index of the edge in this face, and next index is subsequent index in this
  face.</span></strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'><br>
  <strong><span style='font-weight:normal'>If faces do not share edge, the
  returned value is &#8211;1.</span></strong><br>
  <strong><span style='font-weight:normal'>If faces share more indices, first
  occurrence is returned.<o:p></o:p></span></strong></span></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>int FindIndex(word w) const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Get index into vertex indices array of
  1st occurrence of specified vertex index in this face. If face doesn't contain
  such vertex index, the returned value is -1.<o:p></o:p></span></strong></p>
  </td>
 </tr>
 <tr>
  <td width=143 valign=top style='width:107.55pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><![if !supportEmptyParas]>&nbsp;<![endif]><em><b><span style='font-size:
  10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial;font-style:normal'><o:p></o:p></span></b></em></p>
  </td>
  <td width=447 valign=top style='width:335.25pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  background:#A6A6A6;padding:0pt 5.4pt 0pt 5.4pt'>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial'>float ComputeSurfaceArea(const S_vector *verts, dword
  vertex_stride) const;<o:p></o:p></span></strong></p>
  <p><strong><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
  font-family:Arial;font-weight:normal'>Compute area of surface made by this
  face, given an array of vertices, which this face indexes.<o:p></o:p></span></strong></p>
  </td>
 </tr>
</table>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
